{"version":3,"file":"use-user-agent.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as UAParser from 'ua-parser-js';\n\ntype IUseUserAgentReturn = Omit<UAParser.IResult, 'ua'>;\n\nfunction useUserAgent(uastring = window.navigator.userAgent) {\n  let [state, setState] = React.useState<IUseUserAgentReturn | null>(null);\n\n  React.useEffect(() => {\n    let didRun = true;\n\n    try {\n      const uaParser = new UAParser.UAParser();\n      uaParser.setUA(uastring);\n      const payload = {\n        os: uaParser.getOS(),\n        browser: uaParser.getBrowser(),\n        cpu: uaParser.getCPU(),\n        device: uaParser.getDevice(),\n        engine: uaParser.getEngine(),\n      };\n      if (didRun) {\n        setState(payload);\n      }\n    } catch (err) {\n      if (didRun) {\n        setState(null);\n      }\n    }\n\n    return () => {\n      didRun = false;\n    };\n  }, [uastring]);\n\n  return state;\n}\n\nexport { useUserAgent };\n"],"names":["useUserAgent","uastring","window","navigator","userAgent","React","state","setState","didRun","uaParser","UAParser","setUA","payload","os","getOS","browser","getBrowser","cpu","getCPU","device","getDevice","engine","getEngine","err"],"mappings":";;;;;;;AAKA,SAASA,YAAT,CAAsBC,QAAtB;MAAsBA;AAAAA,IAAAA,WAAWC,MAAM,CAACC,SAAP,CAAiBC;;;wBACxBC,cAAA,CAA2C,IAA3C;MAAnBC;MAAOC;;AAEZF,EAAAA,eAAA,CAAgB;AACd,QAAIG,MAAM,GAAG,IAAb;;AAEA,QAAI;AACF,UAAMC,QAAQ,GAAG,IAAIC,iBAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,KAAT,CAAeV,QAAf;AACA,UAAMW,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEJ,QAAQ,CAACK,KAAT,EADU;AAEdC,QAAAA,OAAO,EAAEN,QAAQ,CAACO,UAAT,EAFK;AAGdC,QAAAA,GAAG,EAAER,QAAQ,CAACS,MAAT,EAHS;AAIdC,QAAAA,MAAM,EAAEV,QAAQ,CAACW,SAAT,EAJM;AAKdC,QAAAA,MAAM,EAAEZ,QAAQ,CAACa,SAAT;AALM,OAAhB;;AAOA,UAAId,MAAJ,EAAY;AACVD,QAAAA,QAAQ,CAACK,OAAD,CAAR;AACD;AACF,KAbD,CAaE,OAAOW,GAAP,EAAY;AACZ,UAAIf,MAAJ,EAAY;AACVD,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;;AAED,WAAO;AACLC,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GAzBD,EAyBG,CAACP,QAAD,CAzBH;AA2BA,SAAOK,KAAP;AACD;;;;"}