{"ast":null,"code":"var _jsxFileName = \"/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Modal/CustomeInputPass.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { AvField } from \"availity-reactstrap-validation\";\nimport zxcvbn from \"zxcvbn\";\nimport { Label, FormGroup } from \"reactstrap\";\n\nclass CustomInputPass extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hiddenField: true,\n      score: null\n    });\n\n    _defineProperty(this, \"passwordStrength\", this.passwordStrength.bind(this));\n\n    _defineProperty(this, \"toggleShow\", this.toggleShow.bind(this));\n  }\n\n  toggleShow() {\n    this.setState({\n      hiddenField: !this.state.hiddenField\n    });\n  }\n\n  passwordStrength(e) {\n    if (e.target.value === \"\") {\n      this.setState({\n        score: null\n      });\n    } else {\n      let pwscore = zxcvbn(e.target.value);\n      this.setState({\n        score: pwscore.score\n      });\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.props.showScore === true ? __jsx(React.Fragment, null, __jsx(\"i\", {\n      onClick: this.toggleShow,\n      className: this.state.hiddenField === true ? \"ri-eye-line showPass\" : \"ri-eye-off-line showPass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), __jsx(AvField, {\n      name: this.props.name,\n      validate: this.props.validate,\n      type: this.state.hiddenField ? \"password\" : \"text\",\n      className: \"showPasswordField\",\n      id: this.props.id,\n      value: this.props.value,\n      placeholder: this.props.placeholder,\n      onChange: this.passwordStrength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), __jsx(\"span\", {\n      className: \"password__strength\",\n      \"data-score\": this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })) : __jsx(React.Fragment, null, __jsx(\"i\", {\n      onClick: this.toggleShow,\n      className: this.state.hiddenField === true ? \"ri-eye-line showPass\" : \"ri-eye-off-line showPass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), __jsx(Label, {\n      htmlFor: this.props.for,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, this.props.title), __jsx(AvField, {\n      name: this.props.name,\n      validate: this.props.validate,\n      type: this.state.hiddenField ? \"password\" : \"text\",\n      className: \"showPasswordField\",\n      id: this.props.id,\n      placeholder: this.props.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default CustomInputPass;","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Modal/CustomeInputPass.js"],"names":["React","Component","AvField","zxcvbn","Label","FormGroup","CustomInputPass","hiddenField","score","passwordStrength","bind","toggleShow","setState","state","e","target","value","pwscore","render","props","showScore","name","validate","id","placeholder","for","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { AvField } from \"availity-reactstrap-validation\";\nimport zxcvbn from \"zxcvbn\";\nimport { Label, FormGroup } from \"reactstrap\";\nclass CustomInputPass extends Component {\n  state = {\n    hiddenField: true,\n    score: null,\n  };\n  passwordStrength = this.passwordStrength.bind(this);\n  toggleShow = this.toggleShow.bind(this);\n\n  toggleShow() {\n    this.setState({ hiddenField: !this.state.hiddenField });\n  }\n\n  passwordStrength(e) {\n    if (e.target.value === \"\") {\n      this.setState({\n        score: null,\n      });\n    } else {\n      let pwscore = zxcvbn(e.target.value);\n      this.setState({\n        score: pwscore.score,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.showScore === true ? (\n          \n\n         <>\n            <i\n              onClick={this.toggleShow}\n              className={\n                this.state.hiddenField === true\n                  ? \"ri-eye-line showPass\"\n                  : \"ri-eye-off-line showPass\"\n              }\n            ></i>\n            <AvField\n              name={this.props.name}\n              validate={this.props.validate}\n              type={this.state.hiddenField ? \"password\" : \"text\"}\n              className=\"showPasswordField\"\n              id={this.props.id}\n              value = {this.props.value}\n              placeholder={this.props.placeholder}\n              onChange={this.passwordStrength}\n            />\n            <span\n              className=\"password__strength\"\n              data-score={this.state.score}\n            />\n         </>\n    \n        ) : (\n          <>\n          <i\n              onClick={this.toggleShow}\n              className={\n                this.state.hiddenField === true\n                  ? \"ri-eye-line showPass\"\n                  : \"ri-eye-off-line showPass\"\n              }\n            ></i>\n            <Label htmlFor={this.props.for}>{this.props.title}</Label>\n            <AvField\n              name={this.props.name}\n              validate={this.props.validate}\n              type={this.state.hiddenField ? \"password\" : \"text\"}\n              className=\"showPasswordField\"\n              id={this.props.id}\n              placeholder={this.props.placeholder}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default CustomInputPass;\n"]},"metadata":{},"sourceType":"module"}