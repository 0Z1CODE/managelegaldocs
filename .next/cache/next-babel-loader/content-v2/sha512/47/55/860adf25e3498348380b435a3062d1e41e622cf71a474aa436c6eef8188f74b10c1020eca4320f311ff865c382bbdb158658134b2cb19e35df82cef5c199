{"ast":null,"code":"import _regeneratorRuntime from \"/home/freesby/Desktop/Legal_Docs_Admin-Users/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/freesby/Desktop/Legal_Docs_Admin-Users/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _axios = require(\"axios\");\n\nvar axiosRetry = require(\"axios-retry\");\n\nvar axios = _axios.create();\n\nvar IP = null;\n\nvar GetIp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(IP === null)) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch('https://geolocation-db.com/json/', {\n              method: \"GET\",\n              mode: 'cors'\n            }).then(function (r) {\n              return r.json();\n            })[\"catch\"](function (e) {\n              return e.json;\n            });\n\n          case 3:\n            response = _context.sent;\n            IP = response.IPv4;\n\n          case 5:\n            return _context.abrupt(\"return\", IP);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetIp() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar retryDelay = function retryDelay() {\n  var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var seconds = Math.pow(2, retryNumber) * 1000;\n  var randomMs = 1000 * Math.random();\n  return seconds + randomMs;\n};\n\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay: retryDelay,\n  retryCondition: axiosRetry.isRetryableError\n});\n\n_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          axios.defaults.baseURL = \"http://77.122.140.19/\";\n          _context2.next = 3;\n          return GetIp();\n\n        case 3:\n          axios.defaults.headers.post['User_IP'] = _context2.sent;\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}))();\n\nexport default axios;","map":null,"metadata":{},"sourceType":"module"}