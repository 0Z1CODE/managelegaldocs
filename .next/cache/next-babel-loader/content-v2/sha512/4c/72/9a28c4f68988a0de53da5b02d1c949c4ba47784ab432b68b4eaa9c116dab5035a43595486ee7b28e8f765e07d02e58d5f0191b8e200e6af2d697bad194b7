{"ast":null,"code":"var _jsxFileName = \"/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Navigation/Navigation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport SlideMenu from \"../Common/SlideMenu\";\n\nclass Navigation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"state\", {\n      collapsed: true\n    });\n\n    _defineProperty(this, \"toggleNavbar\", () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    });\n\n    _defineProperty(this, \"renderMenus\", () => {\n      // For external pages like blog & blog details\n      if (window.location.pathname === '/details-one' || window.location.pathname === '/details-two' || window.location.pathname === '/blog-one' || window.location.pathname === '/blog-two' || window.location.pathname === '/blog-three') {\n        return __jsx(React.Fragment, null);\n      }\n\n      return __jsx(React.Fragment, null);\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"menu-shrink\");\n      } else {\n        elementId.classList.remove(\"menu-shrink\");\n      }\n    });\n    window.scrollTo(0, 0);\n\n    if (!(window.location.pathname === '/details-one' || window.location.pathname === '/details-two' || window.location.pathname === '/blog-one' || window.location.pathname === '/blog-two' || window.location.pathname === '/blog-three')) {\n      let mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n      window.addEventListener(\"scroll\", () => {\n        let fromTop = window.scrollY;\n        mainNavLinks.forEach(link => {\n          let section = document.querySelector(link.hash);\n\n          if (section.offsetTop <= fromTop && section.offsetTop + section.offsetHeight > fromTop) {\n            link.classList.add(\"active\");\n          } else {\n            link.classList.remove(\"active\");\n          }\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      collapsed\n    } = this.state;\n    const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n    const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n    return __jsx(\"nav\", {\n      id: \"navbar\",\n      className: \"navbar fixed-top navbar-expand-md navbar-light top-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"container \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      className: \"navbar-brand\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(Image, {\n      src: \"/images/logosvg.svg\",\n      width: \"120px\",\n      height: \"70\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })), __jsx(\"button\", {\n      onClick: this.toggleNavbar,\n      className: classTwo,\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent\",\n      \"aria-controls\": \"navbarSupportedContent\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"navbar-toggler-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: classOne,\n      id: \"navbarSupportedContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, this.renderMenus())));\n  }\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Navigation/Navigation.js"],"names":["AnchorLink","Link","Image","SlideMenu","Navigation","React","Component","collapsed","setState","state","window","location","pathname","componentDidMount","_isMounted","elementId","document","getElementById","addEventListener","scrollY","classList","add","remove","scrollTo","mainNavLinks","querySelectorAll","fromTop","forEach","link","section","querySelector","hash","offsetTop","offsetHeight","componentWillUnmount","render","classOne","classTwo","toggleNavbar","renderMenus"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,iCAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AACA,MAAMC,UAAN,SAAyBC,KAAK,CAACC,SAA/B,CAAyC;AAAA;AAAA;;AAAA,wCACxB,KADwB;;AAAA,mCAG7B;AACJC,MAAAA,SAAS,EAAE;AADP,KAH6B;;AAAA,0CAOtB,MAAM;AACjB,WAAKC,QAAL,CAAc;AACVD,QAAAA,SAAS,EAAE,CAAC,KAAKE,KAAL,CAAWF;AADb,OAAd;AAGH,KAXoC;;AAAA,yCAmDvB,MAAM;AAChB;AACA,UAAIG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,cAA7B,IACAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,cAD7B,IAEAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAF7B,IAGAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAH7B,IAIAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,aAJjC,EAI+C;AAC3C,eACG,2BADH;AAIH;;AAED,aACI,2BADJ;AAIH,KApEoC;AAAA;;AAarCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkB,IAAlB;AACA,QAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAhB;AACAD,IAAAA,QAAQ,CAACE,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACtC,UAAIR,MAAM,CAACS,OAAP,GAAiB,GAArB,EAA0B;AACtBJ,QAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,aAAxB;AACH,OAFD,MAEO;AACHN,QAAAA,SAAS,CAACK,SAAV,CAAoBE,MAApB,CAA2B,aAA3B;AACH;AACJ,KAND;AAOAZ,IAAAA,MAAM,CAACa,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AAEA,QAAI,EAAEb,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,cAA7B,IAA+CF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,cAA5E,IAA8FF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAA3H,IAA0IF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAAvK,IAAsLF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,aAArN,CAAJ,EAAwO;AACpO,UAAIY,YAAY,GAAGR,QAAQ,CAACS,gBAAT,CAA0B,aAA1B,CAAnB;AAEAf,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,YAAIQ,OAAO,GAAGhB,MAAM,CAACS,OAArB;AAEAK,QAAAA,YAAY,CAACG,OAAb,CAAqBC,IAAI,IAAI;AACzB,cAAIC,OAAO,GAAGb,QAAQ,CAACc,aAAT,CAAuBF,IAAI,CAACG,IAA5B,CAAd;;AAEA,cACIF,OAAO,CAACG,SAAR,IAAqBN,OAArB,IACAG,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,YAA5B,GAA2CP,OAF/C,EAGE;AACEE,YAAAA,IAAI,CAACR,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACH,WALD,MAKO;AACHO,YAAAA,IAAI,CAACR,SAAL,CAAeE,MAAf,CAAsB,QAAtB;AACH;AACJ,SAXD;AAYH,OAfD;AAgBH;AACJ;;AAEDY,EAAAA,oBAAoB,GAAE;AAClB,SAAKpB,UAAL,GAAkB,KAAlB;AACH;;AAqBDqB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAE5B,MAAAA;AAAF,QAAgB,KAAKE,KAA3B;AACA,UAAM2B,QAAQ,GAAG7B,SAAS,GAAG,0BAAH,GAAgC,+BAA1D;AACA,UAAM8B,QAAQ,GAAG9B,SAAS,GAAG,+CAAH,GAAqD,qCAA/E;AACA,WACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,yDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,GAAG,EAAC,qBAAX;AAAiC,MAAA,KAAK,EAAC,OAAvC;AAA+C,MAAA,MAAM,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AACI,MAAA,OAAO,EAAE,KAAK+B,YADlB;AAEI,MAAA,SAAS,EAAED,QAFf;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,qBAAY,UAJhB;AAKI,qBAAY,yBALhB;AAMI,uBAAc,wBANlB;AAOI,uBAAc,OAPlB;AAQI,oBAAW,mBARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CALJ,EAkBI;AAAK,MAAA,SAAS,EAAED,QAAhB;AAA0B,MAAA,EAAE,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKG,WAAL,EADN,CAlBJ,CADJ,CADJ;AA0BH;;AApGoC;;AAuGzC,eAAenC,UAAf","sourcesContent":["import AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Link from 'next/link';\nimport Image from 'next/image'\nimport SlideMenu from \"../Common/SlideMenu\";\nclass Navigation extends React.Component {\n    _isMounted = false;\n\n    state = {\n        collapsed: true,\n    };\n\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let elementId = document.getElementById(\"navbar\");\n        document.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 170) {\n                elementId.classList.add(\"menu-shrink\");\n            } else {\n                elementId.classList.remove(\"menu-shrink\");\n            }\n        });\n        window.scrollTo(0, 0);\n\n        if (!(window.location.pathname === '/details-one' || window.location.pathname === '/details-two' || window.location.pathname === '/blog-one' || window.location.pathname === '/blog-two' || window.location.pathname === '/blog-three')){\n            let mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n            \n            window.addEventListener(\"scroll\", () => {\n                let fromTop = window.scrollY;\n            \n                mainNavLinks.forEach(link => {\n                    let section = document.querySelector(link.hash);\n            \n                    if (\n                        section.offsetTop <= fromTop &&\n                        section.offsetTop + section.offsetHeight > fromTop\n                    ) {\n                        link.classList.add(\"active\");\n                    } else {\n                        link.classList.remove(\"active\");\n                    }\n                });\n            });\n        }\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    renderMenus = () => {\n        // For external pages like blog & blog details\n        if (window.location.pathname === '/details-one' || \n            window.location.pathname === '/details-two' || \n            window.location.pathname === '/blog-one' || \n            window.location.pathname === '/blog-two' || \n            window.location.pathname === '/blog-three'){\n            return(\n               <>\n               </>\n            );\n        }\n\n        return(\n            <>\n            </>\n        );\n    }\n\n    render(){\n        const { collapsed } = this.state;\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n        return(\n            <nav id=\"navbar\" className=\"navbar fixed-top navbar-expand-md navbar-light top-menu\">\n                <div className=\"container \">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <Image src=\"/images/logosvg.svg\" width=\"120px\" height=\"70\"/>\n                    </a>\n\n                    <button \n                        onClick={this.toggleNavbar} \n                        className={classTwo}\n                        type=\"button\" \n                        data-toggle=\"collapse\" \n                        data-target=\"#navbarSupportedContent\" \n                        aria-controls=\"navbarSupportedContent\" \n                        aria-expanded=\"false\" \n                        aria-label=\"Toggle navigation\"\n                    >\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className={classOne} id=\"navbarSupportedContent\">\n                        { this.renderMenus() }\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}