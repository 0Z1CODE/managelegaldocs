{"ast":null,"code":"var _jsxFileName = \"/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Navigation/Navigation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Image from \"next/image\";\nimport SlideMenu from \"../Common/SlideMenu\";\nimport { Button } from \"reactstrap\";\nimport FullScreenModal from \"../Modal/FullScreenModal\";\n\nclass Navigation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"state\", {\n      FsModal: false,\n      FormType: null\n    });\n\n    _defineProperty(this, \"show_modal\", e => {\n      const {\n        FormType\n      } = this.state;\n      const CurrentFormType = e.currentTarget.getAttribute(\"attr-type\");\n      if (FormType === CurrentFormType) this.setState({\n        FsModal: !this.state.FsModal\n      });\n      this.setState({\n        FormType: CurrentFormType\n      });\n    });\n\n    _defineProperty(this, \"close_modal\", () => {\n      this.setState({\n        FsModal: !this.state.FsModal\n      });\n    });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"menu-shrink\");\n      } else {\n        elementId.classList.remove(\"menu-shrink\");\n      }\n    });\n    window.scrollTo(0, 0);\n\n    if (!(window.location.pathname === \"/details-one\" || window.location.pathname === \"/details-two\" || window.location.pathname === \"/blog-one\" || window.location.pathname === \"/blog-two\" || window.location.pathname === \"/blog-three\")) {\n      let mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n      window.addEventListener(\"scroll\", () => {\n        let fromTop = window.scrollY;\n        mainNavLinks.forEach(link => {\n          let section = document.querySelector(link.hash);\n\n          if (section.offsetTop <= fromTop && section.offsetTop + section.offsetHeight > fromTop) {\n            link.classList.add(\"active\");\n          } else {\n            link.classList.remove(\"active\");\n          }\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"nav\", {\n      id: \"navbar\",\n      className: \"navbar fixed-top navbar-expand-md navbar-light top-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"container \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"navbar-brand\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, __jsx(Image, {\n      src: \"/images/logosvg.svg\",\n      width: \"120px\",\n      height: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"button\",\n      className: \"sign sign-in\",\n      onClick: this.show_modal,\n      \"attr-type\": \"sign_in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Sign In\"), __jsx(Button, {\n      type: \"button\",\n      className: \"sign sign-up\",\n      onClick: this.show_modal,\n      \"attr-type\": \"sign_up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Sign Up\")), __jsx(SlideMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })))), __jsx(FullScreenModal, {\n      toggleClass: this.state.FsModal === true && \"show_modal\",\n      show_modal: this.show_modal,\n      close_modal: this.close_modal,\n      formType: this.state.FormType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/components/Navigation/Navigation.js"],"names":["Image","SlideMenu","Button","FullScreenModal","Navigation","React","Component","FsModal","FormType","e","state","CurrentFormType","currentTarget","getAttribute","setState","componentDidMount","_isMounted","elementId","document","getElementById","addEventListener","window","scrollY","classList","add","remove","scrollTo","location","pathname","mainNavLinks","querySelectorAll","fromTop","forEach","link","section","querySelector","hash","offsetTop","offsetHeight","componentWillUnmount","render","show_modal","close_modal"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport SlideMenu from \"../Common/SlideMenu\";\nimport { Button } from \"reactstrap\";\nimport FullScreenModal from \"../Modal/FullScreenModal\";\nclass Navigation extends React.Component {\n  _isMounted = false;\n\n  state = {\n      FsModal: false, \n      FormType: null,\n  }\n\n  show_modal = (e) => {\n    const { FormType } = this.state;\n    const CurrentFormType = e.currentTarget.getAttribute(\"attr-type\");\n\n\n    if( FormType === CurrentFormType )\n        this.setState({FsModal: !this.state.FsModal}) \n    this.setState({FormType: CurrentFormType}) \n  }\n  close_modal = () => {\n    this.setState({FsModal: !this.state.FsModal}) \n\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"menu-shrink\");\n      } else {\n        elementId.classList.remove(\"menu-shrink\");\n      }\n    });\n    window.scrollTo(0, 0);\n\n    if (\n      !(\n        window.location.pathname === \"/details-one\" ||\n        window.location.pathname === \"/details-two\" ||\n        window.location.pathname === \"/blog-one\" ||\n        window.location.pathname === \"/blog-two\" ||\n        window.location.pathname === \"/blog-three\"\n      )\n    ) {\n      let mainNavLinks = document.querySelectorAll(\"nav ul li a\");\n\n      window.addEventListener(\"scroll\", () => {\n        let fromTop = window.scrollY;\n\n        mainNavLinks.forEach((link) => {\n          let section = document.querySelector(link.hash);\n\n          if (\n            section.offsetTop <= fromTop &&\n            section.offsetTop + section.offsetHeight > fromTop\n          ) {\n            link.classList.add(\"active\");\n          } else {\n            link.classList.remove(\"active\");\n          }\n        });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n     <>\n      <nav\n        id=\"navbar\"\n        className=\"navbar fixed-top navbar-expand-md navbar-light top-menu\"\n      >\n        <div className=\"container \">\n          <a className=\"navbar-brand\" href=\"/\">\n            <Image src=\"/images/logosvg.svg\" width=\"120px\" height=\"50\" />\n          </a>\n          <div className=\"d-flex align-items-center\">\n            <div className=\"login\">\n              <Button type=\"button\" className=\"sign sign-in\" onClick={this.show_modal} attr-type =\"sign_in\">\n                Sign In\n              </Button>\n              <Button type=\"button\" className=\"sign sign-up\" onClick={this.show_modal} attr-type =\"sign_up\">\n                Sign Up\n              </Button>\n            </div>\n            <SlideMenu />\n          </div>\n        </div>\n      </nav>\n      <FullScreenModal toggleClass={this.state.FsModal === true && \"show_modal\"} show_modal = {this.show_modal} close_modal = {this.close_modal} formType = {this.state.FormType}/>\n     </>\n      \n    );\n  }\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}