{"ast":null,"code":"const _axios = require(\"axios\");\n\nconst axiosRetry = require(\"axios-retry\");\n\nconst axios = _axios.create();\n\nlet userIp;\n\nconst GetIp = () => {\n  return fetch('https://geolocation-db.com/json/', {\n    method: get\n  }).then(({\n    data\n  }) => userIp = data.IPv4);\n};\n\nGetIp();\n\nconst retryDelay = (retryNumber = 0) => {\n  const seconds = Math.pow(2, retryNumber) * 1000;\n  const randomMs = 1000 * Math.random();\n  return seconds + randomMs;\n};\n\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay,\n  retryCondition: axiosRetry.isRetryableError\n});\naxios.defaults.baseURL = \"http://77.122.140.19/\";\naxios.defaults.headers.post['User_IP'] = userIp;\nexport default axios;","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/services/axios.js"],"names":["_axios","require","axiosRetry","axios","create","userIp","GetIp","fetch","method","get","then","data","IPv4","retryDelay","retryNumber","seconds","Math","pow","randomMs","random","retries","retryCondition","isRetryableError","defaults","baseURL","headers","post"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,OAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,KAAK,GAAGH,MAAM,CAACI,MAAP,EAAd;;AACA,IAAIC,MAAJ;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,SAAOC,KAAK,CAAC,kCAAD,EAAqC;AAACC,IAAAA,MAAM,EAAEC;AAAT,GAArC,CAAL,CAAyDC,IAAzD,CAA8D,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaN,MAAM,GAAGM,IAAI,CAACC,IAAzF,CAAP;AACD,CAFD;;AAIAN,KAAK;;AAIL,MAAMO,UAAU,GAAG,CAACC,WAAW,GAAG,CAAf,KAAqB;AACtC,QAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,WAAZ,IAA2B,IAA3C;AACA,QAAMI,QAAQ,GAAG,OAAOF,IAAI,CAACG,MAAL,EAAxB;AACA,SAAOJ,OAAO,GAAGG,QAAjB;AACD,CAJD;;AAKAhB,UAAU,CAACC,KAAD,EAAQ;AAChBiB,EAAAA,OAAO,EAAE,CADO;AAEhBP,EAAAA,UAFgB;AAGhBQ,EAAAA,cAAc,EAAEnB,UAAU,CAACoB;AAHX,CAAR,CAAV;AAOAnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AACArB,KAAK,CAACoB,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,SAA5B,IAAyCrB,MAAzC;AAEA,eAAeF,KAAf","sourcesContent":["const _axios = require(\"axios\");\nconst axiosRetry = require(\"axios-retry\");\nconst axios = _axios.create();\nlet userIp;\n\nconst GetIp = () => {\n  return fetch('https://geolocation-db.com/json/', {method: get}).then(({data}) => (userIp = data.IPv4));\n}\n\nGetIp();\n\n\n\nconst retryDelay = (retryNumber = 0) => {\n  const seconds = Math.pow(2, retryNumber) * 1000;\n  const randomMs = 1000 * Math.random();\n  return seconds + randomMs;\n};\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay,\n  retryCondition: axiosRetry.isRetryableError,\n});\n\n\naxios.defaults.baseURL = \"http://77.122.140.19/\";\naxios.defaults.headers.post['User_IP'] = userIp;\n\nexport default axios;\n"]},"metadata":{},"sourceType":"module"}