{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { AvForm, AvField, AvCheckboxGroup, AvCheckbox } from \"availity-reactstrap-validation\";\nimport { Col, Row, Button, Label, FormGroup, CustomInput, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport requests from \"../../services/requests\";\nimport Note from \"./../../services/notifications\";\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modal: false\n    });\n\n    _defineProperty(this, \"handleChange\", el => {\n      const {\n        name,\n        value\n      } = el.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    });\n\n    _defineProperty(this, \"changeForm\", () => {});\n\n    _defineProperty(this, \"switch_modal\", () => {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    });\n\n    _defineProperty(this, \"registerGlobal\", () => {\n      let purchase_id = null;\n\n      if (this.props.purchaseType !== null || this.props.purchaseType !== undefined) {\n        purchase_id = this.props.purchaseType;\n      }\n\n      requests.RegisterGlobal({\n        user: {\n          user_name: this.state.first_name + \" \" + this.state.last_name,\n          user_email: this.state.email,\n          user_password: this.state.password,\n          user_phone: this.state.phone\n        },\n        office: {\n          office_name: this.state.office_name,\n          street_address: this.state.street_address,\n          city: this.state.city,\n          state: this.state.state,\n          postal_code: this.state.postal_code\n        },\n        purchase: {\n          plan_id: purchase_id\n        }\n      }).then(response => {\n        const {\n          result,\n          data\n        } = response;\n\n        if (result) {\n          Note.isSuck(\"Registration completed successfully\");\n          setTimeout(() => this.props.show_modal({\n            modalType: \"sign_in\"\n          }), 2000);\n        } else {\n          Note.isError(data.error_message);\n          return false;\n        }\n      }).catch(response => {\n        Note.isError(response);\n        return false;\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AvForm, {\n      onValidSubmit: this.registerGlobal\n    }, __jsx(Row, null, __jsx(\"h6\", {\n      className: \"text-normal color-white\"\n    }, \"User Information\"), __jsx(Col, {\n      lg: 6,\n      className: \"mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"First Name\"), __jsx(AvField, {\n      name: \"first_name\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter a First name\"\n        }\n      }\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Last Name\"), __jsx(AvField, {\n      name: \"last_name\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter a Last name\"\n        }\n      }\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"E-mail\"), __jsx(AvField, {\n      name: \"email\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter a valid Email\"\n        },\n        maxLength: {\n          value: 100,\n          errorMessage: \"Your Email must be less then 100 characters\"\n        }\n      }\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Phone\"), __jsx(AvField, {\n      name: \"phone\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: {\n          value: true\n        },\n        tel: {\n          value: true,\n          errorMessage: \"Please enter a valid Phone\"\n        }\n      }\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \"mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Password\"), __jsx(AvField, {\n      name: \"password\",\n      type: \"password\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: true,\n        minLength: {\n          value: 6,\n          errorMessage: \"Password cannot be less than 6 characters\"\n        }\n      }\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Repeat Password\"), __jsx(AvField, {\n      name: \"retry_password\",\n      type: \"password\",\n      className: \"cstm_i cstm_i--small\",\n      onChange: this.handleChange,\n      validate: {\n        required: true,\n        minLength: {\n          value: 6,\n          errorMessage: \"Password cannot be less than 6 characters\"\n        },\n        match: {\n          value: \"password\",\n          errorMessage: \"Password missmatch\"\n        }\n      }\n    })))), __jsx(Row, {\n      className: \"mt-3\"\n    }, __jsx(\"h6\", {\n      className: \"text-normal color-white\"\n    }, \"Office information\"), __jsx(Col, {\n      lg: 12,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Office Name\"), __jsx(AvField, {\n      name: \"office_name\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter Office name\"\n        },\n        maxLength: {\n          value: 45,\n          errorMessage: \"Office name must be less then 45 characters\"\n        }\n      },\n      onChange: this.handleChange\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Address \"), __jsx(AvField, {\n      name: \"street_address\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter Address name\"\n        },\n        maxLength: {\n          value: 100,\n          errorMessage: \"City  must be less then 100 characters\"\n        }\n      },\n      onChange: this.handleChange\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"City \"), __jsx(AvField, {\n      name: \"city\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter City name\"\n        },\n        maxLength: {\n          value: 45,\n          errorMessage: \"City  must be less then 45 characters\"\n        }\n      },\n      onChange: this.handleChange\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"State \"), __jsx(AvField, {\n      name: \"state\",\n      type: \"text\",\n      className: \"cstm_i cstm_i--small\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter State \"\n        },\n        maxLength: {\n          value: 45,\n          errorMessage: \"State  must be less then 45 characters\"\n        }\n      },\n      onChange: this.handleChange\n    }))), __jsx(Col, {\n      lg: 6,\n      className: \" mb-3\"\n    }, __jsx(FormGroup, {\n      className: \"form_relative\"\n    }, __jsx(Label, {\n      className: \"cstm_l\"\n    }, \"Postal Code \"), __jsx(AvField, {\n      name: \"postal_code\",\n      type: \"number\",\n      className: \"cstm_i cstm_i--small\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Please enter Postal Code\"\n        },\n        maxLength: {\n          value: 45,\n          errorMessage: \"Postal Code must be less then 45 characters\"\n        }\n      },\n      onChange: this.handleChange\n    })))), __jsx(Row, null, __jsx(AvCheckboxGroup, {\n      name: \"checkboxCustomInputExample\",\n      required: true,\n      className: \"chbx_custom \"\n    }, __jsx(AvCheckbox, {\n      CustomInput: true,\n      value: \"Agrre\"\n    }), __jsx(\"span\", {\n      onClick: this.switch_modal\n    }, \"I agree with the terms of use\"))), __jsx(Row, null, __jsx(Col, {\n      lg: 12,\n      className: \"\"\n    }, __jsx(Button, {\n      className: \"form-btn w-100\",\n      type: \"submit\",\n      onClick: this.loginUser\n    }, \"Sign Up\")))), __jsx(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.switch_modal,\n      autoFocus: true,\n      fade: false,\n      centered: true,\n      size: \"lg\"\n    }, __jsx(ModalHeader, null, \"Modal title\"), __jsx(ModalBody, null, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), __jsx(ModalFooter, null, __jsx(Button, {\n      onClick: this.switch_modal\n    }, \"Close\"), \" \")));\n  }\n\n}\n\nexport default RegisterForm;","map":null,"metadata":{},"sourceType":"module"}