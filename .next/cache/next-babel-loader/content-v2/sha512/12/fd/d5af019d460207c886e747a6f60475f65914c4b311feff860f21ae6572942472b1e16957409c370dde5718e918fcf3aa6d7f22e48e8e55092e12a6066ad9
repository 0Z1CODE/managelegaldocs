{"ast":null,"code":"const _axios = require('axios');\n\nconst axiosRetry = require('axios-retry');\n\nconst axios = _axios.create();\n\nlet userIp;\n\nconst GetIp = () => {\n  return axios.get('https://geolocation-db.com/json/').then(({\n    data\n  }) => userIp = data.IPv4);\n};\n\nGetIp();\n\nconst retryDelay = (retryNumber = 0) => {\n  const seconds = Math.pow(2, retryNumber) * 1000;\n  const randomMs = 1000 * Math.random();\n  return seconds + randomMs;\n};\n\naxiosRetry(axios, {\n  retries: 3,\n  retryDelay,\n  retryCondition: axiosRetry.isRetryableError\n});\naxios.defaults.baseURL = 'http://77.122.140.19/';\naxios.defaults.headers.post['User_Ip'] = userIp;\nexport default axios;","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/services/axios.js"],"names":["_axios","require","axiosRetry","axios","create","userIp","GetIp","get","then","data","IPv4","retryDelay","retryNumber","seconds","Math","pow","randomMs","random","retries","retryCondition","isRetryableError","defaults","baseURL","headers","post"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,OAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,KAAK,GAAGH,MAAM,CAACI,MAAP,EAAd;;AAEA,IAAIC,MAAJ;;AACA,MAAMC,KAAK,GAAG,MAAM;AAChB,SAAOH,KAAK,CAACI,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAmD,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaJ,MAAM,GAAGI,IAAI,CAACC,IAA9E,CAAP;AACH,CAFD;;AAGAJ,KAAK;;AAEL,MAAMK,UAAU,GAAG,CAACC,WAAW,GAAG,CAAf,KAAqB;AACtC,QAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,WAAZ,IAA2B,IAA3C;AACA,QAAMI,QAAQ,GAAG,OAAOF,IAAI,CAACG,MAAL,EAAxB;AACA,SAAOJ,OAAO,GAAGG,QAAjB;AACD,CAJD;;AAKAd,UAAU,CAACC,KAAD,EAAQ;AAChBe,EAAAA,OAAO,EAAE,CADO;AAEhBP,EAAAA,UAFgB;AAGhBQ,EAAAA,cAAc,EAAEjB,UAAU,CAACkB;AAHX,CAAR,CAAV;AAKAjB,KAAK,CAACkB,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AACAnB,KAAK,CAACkB,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,SAA5B,IAAyCnB,MAAzC;AACA,eAAeF,KAAf","sourcesContent":["const _axios = require('axios') \nconst axiosRetry = require('axios-retry') \nconst axios = _axios.create() \n\nlet userIp;\nconst GetIp = () => {\n    return axios.get('https://geolocation-db.com/json/').then(({data}) => (userIp = data.IPv4));\n}\nGetIp();\n\nconst retryDelay = (retryNumber = 0) => { \n  const seconds = Math.pow(2, retryNumber) * 1000; \n  const randomMs = 1000 * Math.random(); \n  return seconds + randomMs; \n}\naxiosRetry(axios, { \n  retries: 3, \n  retryDelay, \n  retryCondition: axiosRetry.isRetryableError, \n}); \naxios.defaults.baseURL = 'http://77.122.140.19/';\naxios.defaults.headers.post['User_Ip'] = userIp;\nexport default axios;"]},"metadata":{},"sourceType":"module"}