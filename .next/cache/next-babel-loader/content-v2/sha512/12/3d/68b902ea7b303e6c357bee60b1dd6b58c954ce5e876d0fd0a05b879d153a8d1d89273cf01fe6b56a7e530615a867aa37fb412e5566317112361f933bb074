{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"./axios\";\nlet userIp;\n\nconst GetIp = () => {\n  return axios.get('https://geolocation-db.com/json/').then(({\n    data\n  }) => userIp = data.IPv4);\n};\n\nGetIp();\n\nconst LoginUser = loginData => {\n  return axios.post(\"api/signin\", _objectSpread({\n    user_ip: userIp\n  }, loginData)).then(({\n    data\n  }) => data);\n};\n\nconst RegisterUser = registerData => {\n  return axios.post(\"api/signup\", registerData).then(({\n    data\n  }) => data);\n};\n\nexport default {\n  LoginUser,\n  RegisterUser,\n  GetIp\n};","map":{"version":3,"sources":["/home/freesby/Desktop/Legal_Docs_Admin-Users/services/requests.js"],"names":["axios","userIp","GetIp","get","then","data","IPv4","LoginUser","loginData","post","user_ip","RegisterUser","registerData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,IAAIC,MAAJ;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,SAAOF,KAAK,CAACG,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAmD,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaJ,MAAM,GAAGI,IAAI,CAACC,IAA9E,CAAP;AACH,CAFD;;AAIAJ,KAAK;;AAIL,MAAMK,SAAS,GAAGC,SAAS,IAAI;AAC3B,SAAOR,KAAK,CAACS,IAAN,CAAW,YAAX;AAA0BC,IAAAA,OAAO,EAACT;AAAlC,KAA6CO,SAA7C,GAA2DJ,IAA3D,CAAgE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaA,IAA7E,CAAP;AACH,CAFD;;AAIA,MAAMM,YAAY,GAAGC,YAAY,IAAI;AACjC,SAAOZ,KAAK,CAACS,IAAN,CAAW,YAAX,EAAwBG,YAAxB,EAAsCR,IAAtC,CAA2C,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAaA,IAAxD,CAAP;AACH,CAFD;;AAKA,eAAe;AAAEE,EAAAA,SAAF;AAAYI,EAAAA,YAAZ;AAA0BT,EAAAA;AAA1B,CAAf","sourcesContent":["import axios from \"./axios\"\nlet userIp;\n\nconst GetIp = () => {\n    return axios.get('https://geolocation-db.com/json/').then(({data}) => (userIp = data.IPv4));\n}\n\nGetIp();\n\n\n\nconst LoginUser = loginData => {\n    return axios.post(\"api/signin\", {user_ip:userIp ,...loginData}, ).then(({data}) => (data));\n}\n\nconst RegisterUser = registerData => {\n    return axios.post(\"api/signup\",registerData).then(({data}) => (data));\n}\n\n\nexport default { LoginUser,RegisterUser, GetIp };"]},"metadata":{},"sourceType":"module"}